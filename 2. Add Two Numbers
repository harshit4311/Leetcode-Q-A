/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode head1, ListNode head2) {
        ListNode t1 = head1;
        ListNode t2 = head2;
        ListNode dummyNode = new ListNode(-1);
        ListNode current = dummyNode;
        int carry = 0;

        while (t1 != null || t2 != null || carry != 0) {
            int sum = carry;

            if (t1 != null) {
                sum += t1.val;
                t1 = t1.next;
            }

            if (t2 != null) {
                sum += t2.val;
                t2 = t2.next;
            }

            ListNode newNode = new ListNode(sum % 10);
            carry = sum / 10;

            current.next = newode;
            current = current.next;
        }

        if (carry > 0) {
            // If there is a leftover carry, create a new node for it.
            current.next = new ListNode(carry);
        }
        return dummyNode.next;
    }
}
